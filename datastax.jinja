{% set CLUSTER_TYPE = env['project'] + '/' + properties['clusterType'] %}

{% set COLLECTION_PREFIX = '/api/v1/namespaces/{namespace}/' %}
{% set RC_COLLECTION = COLLECTION_PREFIX + 'replicationcontrollers' %}
{% set SERVICE_COLLECTION = COLLECTION_PREFIX + 'services' %}

{% set NAME_PREFIX = env['deployment'] %}
{% set OPSCENTER_NAME = NAME_PREFIX + '-opscenter' %}
{% set NODE_NAME = NAME_PREFIX + '-node' %}
{% set SEED_NAME = NAME_PREFIX + '-seed' %}

{% set PORT = properties['ports']['node'] %}
{% set OPSCENTER_PORT = properties['ports']['opscenter'] %}

resources:
#
# OpsCenter node
#
- name: {{ OPSCENTER_NAME }}
  type: {{ CLUSTER_TYPE }}:{{ SERVICE_COLLECTION }}
  properties:
    apiVersion: v1
    kind: Service
    namespace: default
    metadata:
      name: {{ OPSCENTER_NAME }}
    spec:
      # Uncomment this for external IP for testing.
      # type: LoadBalancer
      ports:
      - port: {{ PORT }}
        targetPort: {{ PORT }}
        protocol: TCP
      selector:
        name: {{ OPSCENTER_NAME }}

- name: {{ OPSCENTER_NAME }}-rc
  type: {{ CLUSTER_TYPE }}:{{ RC_COLLECTION }}
  properties:
    apiVersion: v1
    kind: ReplicationController
    namespace: default
    metadata:
      name: {{ OPSCENTER_NAME }}-rc
    spec:
      template:
        metadata:
          labels:
            name: {{ OPSCENTER_NAME }}
        spec:
          containers:
          - name: opscenter
            image: ubuntu:latest
            env:
            - name: SEED_NODE_SERVICE
              value: {{ SEED_NAME }}
            ports:
            - containerPort: {{ OPSCENTER_PORT }}
            command:
            - /bin/bash
            - -c
            - sleep 60; apt-get update; apt-get -y install wget; wget https://github.com/DSPN/install-datastax/archive/master.zip; apt-get -y install unzip; unzip master.zip; sleep 3600

#            - cd install-datastax-master/bin;
#            - cloud_type="google";
#            - seed_nodes_dns_names=$SEED_NODE_SERVICE;
#            - echo "Configuring nodes with the settings:";
#            - echo cloud_type $cloud_type;
#            - echo seed_nodes_dns_names $seed_nodes_dns_names;
#            - apt-get -y install curl
#            - ./opscenter.sh $cloud_type $seed_nodes_dns_names;




#
# Seed service
#
- name: {{ SEED_NAME }}
  type: {{ CLUSTER_TYPE }}:{{ SERVICE_COLLECTION }}
  properties:
    apiVersion: v1
    kind: Service
    namespace: default
    metadata:
      name: {{ SEED_NAME }}
    spec:
      # Uncomment this for external IP for testing.
      # type: LoadBalancer
      ports:
      - port: {{ PORT }}
        targetPort: {{ PORT }}
        protocol: TCP
      selector:
        name: {{ NODE_NAME }}-0

#
# DataStax Enterprise nodes
#
{% for i in range(properties['numNodes']) %}
- name: {{ NODE_NAME }}-{{ i }}
  type: {{ CLUSTER_TYPE }}:{{ RC_COLLECTION }}
  properties:
    apiVersion: v1
    kind: ReplicationController
    namespace: default
    metadata:
      name: {{ NODE_NAME }}-{{ i }}
    spec:
      template:
        metadata:
          labels:
            name: {{ NODE_NAME }}-{{ i }}
        spec:
          containers:
          - name: datastax
            image: ubuntu:latest
            env:
            - name: SEED_NODE_SERVICE
              value: {{ SEED_NAME }}
            ports:
            - containerPort: {{ PORT }}
            command:
            - /bin/bash
            - -c
            - sleep 60; apt-get update; apt-get -y install wget; wget https://github.com/DSPN/install-datastax/archive/master.zip; apt-get -y install unzip; unzip master.zip; cd install-datastax-master/bin; cloud_type="google"; sleep 3600

#            - zone=$(curl -s -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/zone" | grep -o [[:alnum:]-]*$);
#            - data_center_name=$zone;
#            - seed_nodes_dns_names=$SEED_NODE_SERVICE;
#            - echo "Configuring nodes with the settings:";
#            - echo cloud_type $cloud_type;
#            - echo seed_nodes_dns_names $seed_nodes_dns_names;
#            - echo data_center_name $data_center_name;
#            - ./dse.sh $cloud_type $seed_nodes_dns_names $data_center_name;

{% endfor %}
